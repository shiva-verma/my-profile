{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiv\\\\IdeaProjects\\\\react-portfolio-website\\\\src\\\\components\\\\Card\\\\Card.js\";\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport './index.scss';\n/*\r\n1. Card Class\r\n2. Defaults \r\n*/\n// 1. Card Class /////////////////////////////////////////////\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardImage(props) {\n  const isImageURL = props.image; // let listOfClasses = null;\n  // if (props.effect) {\n  //   listOfClasses = \"styleImage bw\";\n  // } else {\n  //   listOfClasses = \"styleImage\";\n  // }\n\n  if (isImageURL) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"styleImage\",\n      onClick: props.onClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: props.width + 'px',\n          marginTop: '-8%'\n        },\n        src: props.image,\n        alt: \"Seattle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\n_c = CardImage;\n\nfunction CardContent(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"styleCardContent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"styleCardTitle\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"styleLocationLabel\",\n        children: props.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"styleDescription\",\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventOptions\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"button\",\n        children: \"Add Problem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = CardContent;\nexport default class Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bwEffect: false,\n      showOptions: false\n    };\n    this.toggleEffect = this.toggleEffect.bind(this);\n    this.toggleOptions = this.toggleOptions.bind(this);\n  }\n\n  toggleEffect() {\n    this.setState(prevState => ({\n      bwEffect: !prevState.bwEffect\n    }));\n  }\n\n  toggleOptions(e) {\n    let elementClicked = e.target;\n    let card = elementClicked.closest('.styleCard');\n    let optionsSection = card.getElementsByClassName('eventOptions')[0];\n    let optionsVisible = optionsSection.classList.contains('active');\n\n    if (optionsVisible) {\n      optionsSection.classList.remove('active');\n    } else {\n      optionsSection.classList.add('active'); //_options.style.height = \"49px\";\n    } // Old Toggle\n    // this.setState(prevState => ({\n    //   showOptions: !prevState.showOptions\n    // }));\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: this.props.width + 'px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"styleCard\",\n        id: this.props.id,\n        onClick: this.toggleOptions,\n        children: [/*#__PURE__*/_jsxDEV(CardImage, {\n          image: this.props.image,\n          width: this.props.width,\n          effect: this.state.bwEffect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          title: this.props.title,\n          location: this.props.location,\n          description: this.props.description,\n          options: this.state.showOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 2. Defaults /////////////////////////////////////////////\n\nCard.defaultProps = {\n  width: 350,\n  title: 'Template - Card Title',\n  location: 'Location label',\n  description: 'Template description textbox'\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardImage\");\n$RefreshReg$(_c2, \"CardContent\");","map":{"version":3,"sources":["C:/Users/shiv/IdeaProjects/react-portfolio-website/src/components/Card/Card.js"],"names":["Link","React","CardImage","props","isImageURL","image","onClick","width","marginTop","CardContent","title","location","description","Card","Component","constructor","state","bwEffect","showOptions","toggleEffect","bind","toggleOptions","setState","prevState","e","elementClicked","target","card","closest","optionsSection","getElementsByClassName","optionsVisible","classList","contains","remove","add","render","id","defaultProps"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom'\r\nimport React from 'react'\r\nimport './index.scss'\r\n\r\n/*\r\n1. Card Class\r\n2. Defaults \r\n*/\r\n\r\n// 1. Card Class /////////////////////////////////////////////\r\nfunction CardImage(props) {\r\n  const isImageURL = props.image\r\n  // let listOfClasses = null;\r\n\r\n  // if (props.effect) {\r\n  //   listOfClasses = \"styleImage bw\";\r\n  // } else {\r\n  //   listOfClasses = \"styleImage\";\r\n  // }\r\n\r\n  if (isImageURL) {\r\n    return (\r\n      <div className=\"styleImage\" onClick={props.onClick}>\r\n        <img\r\n          style={{ width: props.width + 'px', marginTop: '-8%' }}\r\n          src={props.image}\r\n          alt=\"Seattle\"\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nfunction CardContent(props) {\r\n  return (\r\n    <div className=\"styleCardContent\">\r\n      <div>\r\n        <p className=\"styleCardTitle\">{props.title}</p>\r\n        <p className=\"styleLocationLabel\">{props.location}</p>\r\n        <p className=\"styleDescription\">{props.description}</p>\r\n      </div>\r\n      <div className=\"eventOptions\">\r\n        <a class=\"button\">Add Problem</a>\r\n        {/* <p className=\"notGoing\">Not interested</p>\r\n        <p className=\"going\">I'm going</p> */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default class Card extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      bwEffect: false,\r\n      showOptions: false,\r\n    }\r\n\r\n    this.toggleEffect = this.toggleEffect.bind(this)\r\n    this.toggleOptions = this.toggleOptions.bind(this)\r\n  }\r\n\r\n  toggleEffect() {\r\n    this.setState((prevState) => ({\r\n      bwEffect: !prevState.bwEffect,\r\n    }))\r\n  }\r\n\r\n  toggleOptions(e) {\r\n    let elementClicked = e.target\r\n    let card = elementClicked.closest('.styleCard')\r\n    let optionsSection = card.getElementsByClassName('eventOptions')[0]\r\n    let optionsVisible = optionsSection.classList.contains('active')\r\n\r\n    if (optionsVisible) {\r\n      optionsSection.classList.remove('active')\r\n    } else {\r\n      optionsSection.classList.add('active')\r\n      //_options.style.height = \"49px\";\r\n    }\r\n\r\n    // Old Toggle\r\n    // this.setState(prevState => ({\r\n    //   showOptions: !prevState.showOptions\r\n    // }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: this.props.width + 'px' }}>\r\n        <div\r\n          className=\"styleCard\"\r\n          id={this.props.id}\r\n          onClick={this.toggleOptions}\r\n        >\r\n          <CardImage\r\n            image={this.props.image}\r\n            width={this.props.width}\r\n            effect={this.state.bwEffect}\r\n          />\r\n          <CardContent\r\n            title={this.props.title}\r\n            location={this.props.location}\r\n            description={this.props.description}\r\n            options={this.state.showOptions}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 2. Defaults /////////////////////////////////////////////\r\nCard.defaultProps = {\r\n  width: 350,\r\n  title: 'Template - Card Title',\r\n  location: 'Location label',\r\n  description: 'Template description textbox',\r\n}\r\n"]},"metadata":{},"sourceType":"module"}